{"version":3,"file":"Mountains-dbg.controller.js","names":["RANGE_COLUMN_KEY","MountainsController","Controller","extend","onInit","_onInit","engine","Engine","getInstance","initGridFilter","_initGridFilter","gridList","byId","filterModel","getModel","aFilterMetadata","getItems","map","gridListItem","index","path","key","getId","label","getData","filters","filterHelper","MetadataHelper","register","helper","controller","Items","SelectionController","control","targetAggregation","attachStateChange","onP13nStateChange","bind","_onP13nStateChange","event","parameters","getParameters","state","forEach","setSelected","some","selectionState","onGridFilterPress","_onGridFilterPress","show","title","source","getSource","onP13nPress","_onP13nPress","p13nTable","openP13n","onToggleRange","_onToggleRange","pressed","getPressed","retrieveState","rangeColumnState","Columns","find","visible","MessageToast","push","applyState"],"sources":["Mountains.controller.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\"\nimport Event from \"sap/ui/base/Event\"\nimport P13nTable, { P13nTableState } from \"../control/P13nTable\"\nimport ToggleButton from \"sap/m/ToggleButton\"\nimport MessageToast from \"sap/m/MessageToast\"\nimport SelectionController, { SelectionState } from \"sap/m/p13n/SelectionController\"\nimport Engine, { State } from \"sap/m/p13n/Engine\"\nimport GridList from \"sap/f/GridList\"\nimport MetadataHelper, { MetadataObject } from \"sap/m/p13n/MetadataHelper\"\nimport GridListItem from \"sap/f/GridListItem\"\nimport JSONModel from \"sap/ui/model/json/JSONModel\"\nimport Control from \"sap/ui/core/Control\"\n\nconst RANGE_COLUMN_KEY = 'range'\n\n/**\n * @namespace sample.p13n.app.controller\n */\nexport default class MountainsController extends Controller {\n\n\tprivate engine: Engine\n\n\tpublic onInit(): void {\n\t\tthis.engine = Engine.getInstance()\n\t\tthis.initGridFilter()\n\t}\n\n\tprivate initGridFilter(): void {\n\t\tconst gridList = this.byId(\"gridFilter\") as GridList\n\t\tconst filterModel = gridList.getModel(\"filters\") as JSONModel\n\n\t\tconst aFilterMetadata: MetadataObject[] = gridList.getItems().map((gridListItem, index: number) => {\n\t\t\treturn {\n\t\t\t\tpath: \"\",\n\t\t\t\tkey: gridListItem.getId(),\n\t\t\t\tlabel: filterModel.getData().filters[index].label\n\t\t\t}\n\t\t})\n\n\t\tconst filterHelper = new MetadataHelper(aFilterMetadata)\n\n\t\tthis.engine.register(gridList, {\n\t\t\thelper: filterHelper,\n\t\t\tcontroller: {\n\t\t\t\tItems: new SelectionController({\n\t\t\t\t\tcontrol: gridList,\n\t\t\t\t\ttargetAggregation: \"items\"\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tthis.engine.attachStateChange(this.onP13nStateChange.bind(this))\n\t}\n\n\tprivate onP13nStateChange(event: Event): void {\n\t\tconst parameters = event.getParameters() as {\n\t\t\tcontrol: Control,\n\t\t\tstate: MountainsControllerState\n\t\t}\n\t\tconst state: MountainsControllerState = parameters.state\n\t\tconst gridList = this.byId(\"gridFilter\") as GridList\n\n\t\tif (parameters.control === gridList) {\n\t\t\tgridList.getItems().forEach((gridListItem: GridListItem) => {\n\t\t\t\tgridListItem.setSelected(state.Items.some((selectionState: SelectionState) => {\n\t\t\t\t\treturn gridListItem.getId() === selectionState.key\n\t\t\t\t}))\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic onGridFilterPress(event: Event): void {\n\t\tconst gridList = this.byId(\"gridFilter\") as GridList\n\t\tthis.engine.show(gridList, [\"Items\"], {\n\t\t\ttitle: \"Filter Selection\",\n\t\t\tsource: event.getSource()\n\t\t})\n\t}\n\n\tpublic onP13nPress(event: Event): void {\n\t\tconst p13nTable: P13nTable = this.byId(\"table\") as P13nTable\n\t\tp13nTable.openP13n(event)\n\t}\n\n\tpublic async onToggleRange(event: Event): Promise<void> {\n\t\tconst p13nTable: P13nTable | undefined = this.byId(\"table\") as P13nTable | undefined\n\t\tconst pressed = (event.getSource() as ToggleButton).getPressed()\n\t\tconst state: P13nTableState = await p13nTable.retrieveState() as P13nTableState\n\t\tconst rangeColumnState = state.Columns.find((selectionState: SelectionState) => {\n\t\t\treturn selectionState.key == RANGE_COLUMN_KEY\n\t\t})\n\t\tif (pressed && rangeColumnState) {\n\t\t\trangeColumnState.visible = false\n\t\t\tMessageToast.show(\"Range hidden\")\n\t\t} else {\n\t\t\tstate.Columns.push({ key: RANGE_COLUMN_KEY, index: 0 })\n\t\t\tMessageToast.show(\"Range shown\")\n\t\t}\n\t\tp13nTable.applyState(state)\n\t}\n}\n\ninterface MountainsControllerState extends State {\n\tItems: SelectionState[]\n}"],"mappings":"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","ignoreList":[]}