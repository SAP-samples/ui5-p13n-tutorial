{"version":3,"file":"P13nTable-dbg.js","names":["P13nTable","Table","extend","renderer","constructor","_constructor","id","settings","Table.prototype.constructor.call","engine","Engine","getInstance","initialized","Promise","resolve","attachEventOnce","initP13n","_initP13n","columns","getColumns","columnsMetadata","map","column","index","columnHeader","getHeader","columnListItem","getItems","innerControl","getCells","key","data","label","getText","path","getBinding","isA","getPath","helper","MetadataHelper","register","controller","Columns","SelectionController","control","targetAggregation","attachStateChange","event","parameters","getParameters","onStateChange","_onStateChange","state","forEach","setVisible","some","selectionState","moveColum","_moveColum","find","undefined","oldIndex","indexOf","removeColumn","insertColumn","fnMoveCells","cell","removeCell","insertCell","itemsBindingInfo","getBindingInfo","template","item","openP13n","_openP13n","show","title","source","getSource"],"sources":["P13nTable.ts"],"sourcesContent":["import Table, { $TableSettings } from \"sap/m/Table\"\nimport Engine, { State } from \"sap/m/p13n/Engine\"\nimport SelectionController from \"sap/m/p13n/SelectionController\"\n// @ts-ignore TODO: FIX export of MetadataObject type\nimport MetadataHelper, { MetadataObject } from \"sap/m/p13n/MetadataHelper\"\nimport Column from \"sap/m/Column\"\nimport Text from \"sap/m/Text\"\nimport Event from \"sap/ui/base/Event\"\nimport Control from \"sap/ui/core/Control\"\nimport ColumnListItem from \"sap/m/ColumnListItem\"\nimport { AggregationBindingInfo } from \"sap/ui/base/ManagedObject\"\n\n/**\n * @namespace sample.p13n.app.control\n */\nexport default class P13nTable extends Table {\n\tstatic renderer: string = \"sap/m/TableRenderer\"\n\n\tprivate initialized: Promise<void>\n\n\tprivate helper: MetadataHelper\n\n\tprivate engine: Engine\n\n\tconstructor(id?: string, settings?: $TableSettings) {\n\t\tsuper(id, settings)\n\t\t// @ts-ignore  TODO: FIX static method declaration\n\t\tthis.engine = Engine.getInstance()\n\t\tthis.initialized = new Promise((resolve: () => void): void => {\n\t\t\tthis.attachEventOnce(\"updateFinished\", (): void => {\n\t\t\t\tthis.initP13n()\n\t\t\t\tresolve()\n\t\t\t}, this)\n\t\t})\n\t}\n\n\tprivate initP13n(): void {\n\t\tconst columns: Column[] = this.getColumns()\n\t\tconst columnsMetadata: MetadataObject[] = columns.map((column: Column, index: number) => {\n\t\t\tconst columnHeader = column.getHeader() as Text\n\t\t\tconst columnListItem: ColumnListItem = this.getItems()[0] as ColumnListItem\n\t\t\tconst innerControl = columnListItem.getCells()[index]\n\t\t\treturn {\n\t\t\t\tkey: column.data(\"p13nKey\"),\n\t\t\t\tlabel: columnHeader.getText(false),\n\t\t\t\tpath: innerControl.getBinding(innerControl.isA(\"sap.m.ObjectIdentifier\") ? \"title\" : \"text\").getPath()\n\t\t\t}\n\t\t})\n\n\t\t// @ts-ignore TODO: FIX constructor\n\t\tthis.helper = new MetadataHelper(columnsMetadata)\n\n\t\tthis.engine.register(this, {\n\t\t\thelper: this.helper,\n\t\t\tcontroller: {\n\t\t\t\t// @ts-ignore TODO: FIX constructor\n\t\t\t\tColumns: new SelectionController({\n\t\t\t\t\tcontrol: this,\n\t\t\t\t\ttargetAggregation: \"columns\"\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tthis.engine.attachStateChange((event: Event) => {\n\t\t\tconst parameters = event.getParameters() as any\n\t\t\tif (parameters[\"control\"] === this) {\n\t\t\t\tthis.onStateChange(parameters[\"state\"])\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic onStateChange(state: P13nTableState): void {\n\t\tthis.getColumns().forEach((column: Column) => {\n\t\t\t// if the column is not in the state, it is not visible\n\t\t\tcolumn.setVisible(state.Columns.some((selectionState: SelectionState) => {\n\t\t\t\treturn column.data(\"p13nKey\") === selectionState.key\n\t\t\t}))\n\t\t})\n\n\t\tstate.Columns.forEach(this.moveColum, this)\n\t}\n\n\tprivate moveColum(selectionState: SelectionState, index: number): void {\n\t\tconst column: Column | undefined = this.getColumns().find((column: Column) => {\n\t\t\treturn column.data(\"p13nKey\") === selectionState.key\n\t\t})\n\t\tif (column === undefined) return\n\t\tconst oldIndex: number = this.getColumns().indexOf(column)\n\n\t\tif (index != oldIndex) {\n\t\t\tthis.removeColumn(column)\n\t\t\tthis.insertColumn(column, index)\n\n\t\t\tconst fnMoveCells = (columnListItem: ColumnListItem | undefined) => {\n\t\t\t\tif (columnListItem?.isA(\"sap.m.ColumnListItem\")) {\n\t\t\t\t\tconst cell: Control | null = columnListItem.removeCell(oldIndex)\n\t\t\t\t\tif (cell != null) columnListItem.insertCell(cell, index)\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst itemsBindingInfo: AggregationBindingInfo = this.getBindingInfo(\"items\") as AggregationBindingInfo\n\t\t\tfnMoveCells(itemsBindingInfo.template as ColumnListItem | undefined)\n\t\t\tthis.getItems().forEach((item) => fnMoveCells(item as ColumnListItem))\n\t\t}\n\t}\n\n\tpublic openP13n(event: Event): void {\n\t\tthis.engine.show(this, [\"Columns\"], {\n\t\t\ttitle: \"Table Settings\",\n\t\t\tsource: event.getSource<Control>()\n\t\t})\n\t}\n\n}\n\nexport interface ColumnState {\n\tkey: string,\n\tvisible?: boolean,\n\tposition?: number\n}\n\nexport interface P13nTableState extends State {\n\tColumns: ColumnState[]\n}"],"mappings":"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","ignoreList":[]}