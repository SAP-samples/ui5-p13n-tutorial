{"version":3,"file":"P13nTable-dbg.js","names":["P13nTable","Table","extend","renderer","constructor","_constructor","id","settings","Table.prototype.constructor.call","engine","Engine","getInstance","initialized","Promise","resolve","attachEventOnce","initP13n","_initP13n","columns","getColumns","columnsMetadata","map","column","index","columnHeader","getHeader","columnListItem","getItems","innerControl","getCells","key","data","label","getText","path","getBinding","isA","getPath","helper","MetadataHelper","register","controller","Columns","SelectionController","control","targetAggregation","Sorter","SortController","Groups","GroupController","Filter","FilterController","attachStateChange","event","parameters","getParameters","onStateChange","_onStateChange","state","forEach","setVisible","some","selectionState","moveColum","sorters","groupState","push","undefined","sortState","descending","filters","filterInfoText","Object","keys","filterKey","getProperty","filterPath","filterStateItem","operator","values","listBinding","sort","filter","setFilterInfoText","_moveColum","find","oldIndex","indexOf","removeColumn","insertColumn","fnMoveCells","cell","removeCell","insertCell","itemsBindingInfo","getBindingInfo","template","item","openP13n","_openP13n","show","title","source","getSource","_setFilterInfoText","infoToolbar","getInfoToolbar","setInfoToolbar","OverflowToolbar","design","active","content","Text","text","Label","getContent","setText","destroy","applyState","_applyState","retrieveState","_retrieveState"],"sources":["P13nTable.ts"],"sourcesContent":["import Table, { $TableSettings } from \"sap/m/Table\"\nimport Engine, { State } from \"sap/m/p13n/Engine\"\nimport SelectionController, { SelectionState } from \"sap/m/p13n/SelectionController\"\nimport MetadataHelper, { MetadataObject } from \"sap/m/p13n/MetadataHelper\"\nimport Column from \"sap/m/Column\"\nimport Text from \"sap/m/Text\"\nimport Event from \"sap/ui/base/Event\"\nimport Control from \"sap/ui/core/Control\"\nimport ColumnListItem from \"sap/m/ColumnListItem\"\nimport { AggregationBindingInfo } from \"sap/ui/base/ManagedObject\"\nimport SortController, { SortState } from \"sap/m/p13n/SortController\"\nimport GroupController, { GroupState } from \"sap/m/p13n/GroupController\"\nimport Sorter from \"sap/ui/model/Sorter\"\nimport ListBinding from \"sap/ui/model/ListBinding\"\nimport FilterController, { FilterState, FilterStateItem } from \"sap/m/p13n/FilterController\"\nimport Filter from \"sap/ui/model/Filter\"\nimport Toolbar from \"sap/m/Toolbar\"\nimport OverflowToolbar from \"sap/m/OverflowToolbar\"\nimport Label from \"sap/m/Label\"\nimport FilterOperator from \"sap/ui/model/FilterOperator\"\n\n/**\n * @namespace sample.p13n.app.control\n */\nexport default class P13nTable extends Table {\n\tstatic renderer: string = \"sap/m/TableRenderer\"\n\n\tprivate initialized: Promise<void>\n\n\tprivate helper: MetadataHelper\n\n\tprivate engine: Engine\n\n\tconstructor(id?: string, settings?: $TableSettings) {\n\t\tsuper(id, settings)\n\t\tthis.engine = Engine.getInstance()\n\t\tthis.initialized = new Promise((resolve: () => void): void => {\n\t\t\tthis.attachEventOnce(\"updateFinished\", (): void => {\n\t\t\t\tthis.initP13n()\n\t\t\t\tresolve()\n\t\t\t}, this)\n\t\t})\n\t}\n\n\tprivate initP13n(): void {\n\t\tconst columns: Column[] = this.getColumns()\n\t\tconst columnsMetadata: MetadataObject[] = columns.map((column: Column, index: number) => {\n\t\t\tconst columnHeader = column.getHeader() as Text\n\t\t\tconst columnListItem: ColumnListItem = this.getItems()[0] as ColumnListItem\n\t\t\tconst innerControl = columnListItem.getCells()[index]\n\t\t\treturn {\n\t\t\t\tkey: column.data(\"p13nKey\"),\n\t\t\t\tlabel: columnHeader.getText(false),\n\t\t\t\tpath: innerControl.getBinding(innerControl.isA(\"sap.m.ObjectIdentifier\") ? \"title\" : \"text\").getPath()\n\t\t\t}\n\t\t})\n\n\t\tthis.helper = new MetadataHelper(columnsMetadata)\n\n\t\tthis.engine.register(this, {\n\t\t\thelper: this.helper,\n\t\t\tcontroller: {\n\t\t\t\tColumns: new SelectionController({\n\t\t\t\t\tcontrol: this,\n\t\t\t\t\ttargetAggregation: \"columns\"\n\t\t\t\t}),\n\t\t\t\tSorter: new SortController({\n\t\t\t\t\tcontrol: this\n\t\t\t\t}),\n\t\t\t\tGroups: new GroupController({\n\t\t\t\t\tcontrol: this\n\t\t\t\t}),\n\t\t\t\tFilter: new FilterController({\n\t\t\t\t\tcontrol: this\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tthis.engine.attachStateChange((event: Event) => {\n\t\t\tconst parameters = event.getParameters() as any\n\t\t\tif (parameters[\"control\"] === this) {\n\t\t\t\tthis.onStateChange(parameters[\"state\"])\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic onStateChange(state: P13nTableState): void {\n\n\t\tthis.getColumns().forEach((column: Column) => {\n\t\t\t// if the column is not in the state, it is not visible\n\t\t\tcolumn.setVisible(state.Columns.some((selectionState: SelectionState) => {\n\t\t\t\treturn column.data(\"p13nKey\") === selectionState.key\n\t\t\t}))\n\t\t})\n\n\t\tstate.Columns.forEach(this.moveColum, this)\n\n\t\tconst sorters: Sorter[] = []\n\n\t\tstate.Groups.forEach((groupState: GroupState) => {\n\t\t\tsorters.push(new Sorter(this.helper.getPath(groupState.key), undefined, true))\n\t\t})\n\n\t\tstate.Sorter.forEach((sortState: SortState) => {\n\t\t\tsorters.push(new Sorter(this.helper.getPath(sortState.key), sortState.descending))\n\t\t})\n\n\t\tconst filters: Filter[] = []\n\t\tlet filterInfoText: string\n\t\tObject.keys(state.Filter).forEach((filterKey: string) => {\n\t\t\tconst label = (this.helper.getProperty(filterKey) as MetadataObject).label\n\t\t\tfilterInfoText = filterInfoText ? filterInfoText + \", \" + label : label\n\n\t\t\tconst filterPath = this.helper.getPath(filterKey)\n\t\t\tstate.Filter[filterKey].forEach((filterStateItem: FilterStateItem) => {\n\t\t\t\tconst operator = filterStateItem.operator as FilterOperator\n\t\t\t\tfilters.push(new Filter(filterPath, operator, filterStateItem.values[0]))\n\t\t\t})\n\t\t})\n\n\t\tconst listBinding = this.getBinding(\"items\") as ListBinding\n\t\tlistBinding?.sort(sorters)\n\t\tlistBinding?.filter(filters)\n\t\tthis.setFilterInfoText(filterInfoText)\n\t}\n\n\tprivate moveColum(selectionState: SelectionState, index: number): void {\n\t\tconst column: Column | undefined = this.getColumns().find((column: Column) => {\n\t\t\treturn column.data(\"p13nKey\") === selectionState.key\n\t\t})\n\t\tif (column === undefined) return\n\t\tconst oldIndex: number = this.getColumns().indexOf(column)\n\n\t\tif (index != oldIndex) {\n\t\t\tthis.removeColumn(column)\n\t\t\tthis.insertColumn(column, index)\n\n\t\t\tconst fnMoveCells = (columnListItem: ColumnListItem | undefined) => {\n\t\t\t\tif (columnListItem?.isA(\"sap.m.ColumnListItem\")) {\n\t\t\t\t\tconst cell: Control | null = columnListItem.removeCell(oldIndex)\n\t\t\t\t\tif (cell != null) columnListItem.insertCell(cell, index)\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst itemsBindingInfo: AggregationBindingInfo = this.getBindingInfo(\"items\") as AggregationBindingInfo\n\t\t\tfnMoveCells(itemsBindingInfo.template as ColumnListItem | undefined)\n\t\t\tthis.getItems().forEach((item) => fnMoveCells(item as ColumnListItem))\n\t\t}\n\t}\n\n\tpublic openP13n(event: Event): void {\n\t\tthis.engine.show(this, [\"Columns\", \"Sorter\", \"Groups\", \"Filter\"], {\n\t\t\ttitle: \"Table Settings\",\n\t\t\tsource: event.getSource<Control>()\n\t\t})\n\t}\n\n\tpublic setFilterInfoText(filterInfoText: string): void {\n\t\tconst infoToolbar: Toolbar | undefined = this.getInfoToolbar()\n\t\tif (filterInfoText && !infoToolbar) {\n\t\t\tthis.setInfoToolbar(new OverflowToolbar({\n\t\t\t\tdesign: \"Info\",\n\t\t\t\tactive: true,\n\t\t\t\tcontent: [\n\t\t\t\t\tnew Text({ text: \"Filtered by:\" }),\n\t\t\t\t\tnew Label({ text: filterInfoText })\n\t\t\t\t]\n\t\t\t}))\n\t\t} else if (filterInfoText) {\n\t\t\tconst label: Label = infoToolbar.getContent()[1] as Label\n\t\t\tlabel.setText(filterInfoText)\n\t\t} else if (infoToolbar) {\n\t\t\tinfoToolbar.destroy()\n\t\t}\n\t}\n\n\tpublic async applyState(state: P13nTableState) {\n\t\tawait this.initialized\n\t\treturn this.engine.applyState(this, state)\n\t}\n\n\tpublic async retrieveState() {\n\t\tawait this.initialized\n\t\treturn this.engine.retrieveState(this)\n\t}\n}\n\nexport interface P13nTableState extends State {\n\tColumns: SelectionState[],\n\tSorter: SortState[],\n\tGroups: GroupState[],\n\tFilter: FilterState\n}"],"mappings":"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","ignoreList":[]}