{"version":3,"file":"P13nTable.js","names":["P13nTable","Table","extend","renderer","constructor","_constructor","id","settings","Table.prototype.constructor.call","this","engine","Engine","getInstance","initialized","Promise","resolve","attachEventOnce","initP13n","_initP13n","columns","getColumns","columnsMetadata","map","column","index","columnHeader","getHeader","columnListItem","getItems","innerControl","getCells","key","data","label","getText","path","getBinding","isA","getPath","helper","MetadataHelper","register","controller","Columns","SelectionController","control","targetAggregation","openP13n","_openP13n","event","show","title","source","getSource"],"sources":["P13nTable.ts"],"sourcesContent":["import Table, { $TableSettings } from \"sap/m/Table\"\nimport Engine from \"sap/m/p13n/Engine\"\nimport SelectionController from \"sap/m/p13n/SelectionController\"\nimport MetadataHelper, { MetadataObject } from \"sap/m/p13n/MetadataHelper\"\nimport Column from \"sap/m/Column\"\nimport Text from \"sap/m/Text\"\nimport Event from \"sap/ui/base/Event\"\nimport Control from \"sap/ui/core/Control\"\nimport ColumnListItem from \"sap/m/ColumnListItem\"\n\n/**\n * @namespace sample.p13n.app.control\n */\nexport default class P13nTable extends Table {\n\tstatic renderer: string = \"sap/m/TableRenderer\"\n\n\tprivate initialized: Promise<void>\n\n\tprivate helper: MetadataHelper\n\n\tprivate engine: Engine\n\n\tconstructor(id?: string, settings?: $TableSettings) {\n\t\tsuper(id, settings)\n\t\tthis.engine = Engine.getInstance()\n\t\tthis.initialized = new Promise((resolve: () => void): void => {\n\t\t\tthis.attachEventOnce(\"updateFinished\", (): void => {\n\t\t\t\tthis.initP13n()\n\t\t\t\tresolve()\n\t\t\t}, this)\n\t\t})\n\t}\n\n\tprivate initP13n(): void {\n\t\tconst columns: Column[] = this.getColumns()\n\t\tconst columnsMetadata: MetadataObject[] = columns.map((column: Column, index: number) => {\n\t\t\tconst columnHeader = column.getHeader() as Text\n\t\t\tconst columnListItem: ColumnListItem = this.getItems()[0] as ColumnListItem\n\t\t\tconst innerControl = columnListItem.getCells()[index]\n\t\t\treturn {\n\t\t\t\tkey: column.data(\"p13nKey\"),\n\t\t\t\tlabel: columnHeader.getText(false),\n\t\t\t\tpath: innerControl.getBinding(innerControl.isA(\"sap.m.ObjectIdentifier\") ? \"title\" : \"text\").getPath()\n\t\t\t}\n\t\t})\n\n\t\tthis.helper = new MetadataHelper(columnsMetadata)\n\n\t\tthis.engine.register(this, {\n\t\t\thelper: this.helper,\n\t\t\tcontroller: {\n\t\t\t\tColumns: new SelectionController({\n\t\t\t\t\tcontrol: this,\n\t\t\t\t\ttargetAggregation: \"columns\"\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic openP13n(event: Event): void {\n\t\tthis.engine.show(this, [\"Columns\"], {\n\t\t\ttitle: \"Table Settings\",\n\t\t\tsource: event.getSource<Control>()\n\t\t})\n\t}\n\n}"],"mappings":"2JAUA,MAGqBA,EAAkBC,EAAKC,OAAA,qCACpCC,SAAmB,sBAQ1BC,YAAW,SAAAC,EAACC,EAAaC,GACxBC,6BAAAC,KAAMH,EAAIC,GACVE,KAAKC,OAASC,EAAOC,cACrBH,KAAKI,YAAc,IAAIC,QAASC,IAC/BN,KAAKO,gBAAgB,iBAAkB,KACtCP,KAAKQ,WACLF,GAAS,EACPN,KAAK,EAEV,EAEQQ,SAAQ,SAAAC,IACf,MAAMC,EAAoBV,KAAKW,aAC/B,MAAMC,EAAoCF,EAAQG,IAAI,CAACC,EAAgBC,KACtE,MAAMC,EAAeF,EAAOG,YAC5B,MAAMC,EAAiClB,KAAKmB,WAAW,GACvD,MAAMC,EAAeF,EAAeG,WAAWN,GAC/C,MAAO,CACNO,IAAKR,EAAOS,KAAK,WACjBC,MAAOR,EAAaS,QAAQ,OAC5BC,KAAMN,EAAaO,WAAWP,EAAaQ,IAAI,0BAA4B,QAAU,QAAQC,UAC7F,GAGF7B,KAAK8B,OAAS,IAAIC,EAAenB,GAEjCZ,KAAKC,OAAO+B,SAAShC,KAAM,CAC1B8B,OAAQ9B,KAAK8B,OACbG,WAAY,CACXC,QAAS,IAAIC,EAAoB,CAChCC,QAASpC,KACTqC,kBAAmB,cAIvB,EAEOC,SAAQ,SAAAC,EAACC,GACfxC,KAAKC,OAAOwC,KAAKzC,KAAM,CAAC,WAAY,CACnC0C,MAAO,iBACPC,OAAQH,EAAMI,aAEhB,IAAC,OAnDmBrD,CAAS","ignoreList":[]}